#!/bin/bash

# Generates model classes using OpenAPI
# Note: The OpenAPI output is modified to use relative impports, and also
# to eliminate unnecessary client code

os=$(uname -s)
if [[ "$os" == "Darwin" ]]
then
    sed="gsed"
else
    sed="sed"
fi

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
pylib_dir=${script_dir}/pylib
root_dir=${pylib_dir}/..
py_gen_dir=${pylib_dir}/serendipity/gen
py_openapi_patch_dir=${pylib_dir}/openapi_patches

appscript_dir=${script_dir}/javascript/
appscript_gen_dir=${appscript_dir}/src/gen
appscript_openapi_patch_dir=${appscript_dir}/openapi_patches

# Cleanup old files
rm -rf ${py_gen_dir} ${appscript_gen_dir}

function generate_python_package
{
    package_name="$1"
    mkdir -p ${py_gen_dir}/${package_name}
    # Generate the model
    # Note: can use --global-property=models here to avoid generating api and client code
    # but then the __init__.py for the models is not autogenerated (which is useful)
    JAVA_OPTS="-Dlog.level=warn" JAVA_TOOL_OPTIONS="-Dlog.level=warn" \
    java -jar ${root_dir}/deps/lib/openapi-generator-cli-5.0.0-beta2.jar generate \
        -i ${root_dir}/schema/serendipity/${package_name}.json \
        -c ${pylib_dir}/openapi_config.json \
        -g python \
        --package-name ${package_name} \
        -o ${py_gen_dir}

    # The default OpenAPI files doesn't work for us. We don't need any of the REST stuff yet, also 
    # OpenAPI doesn't use relative importss which causes problems. So do the following:
    # 1. Use relative imports
    # 2. Use our own config.py and api_client.py classes

    # Replace unneeded files
    # rm -rf ${py_gen_dir}/.openapi* ${py_gen_dir}/*.md ${py_gen_dir}/${package_name}/*.py ${py_gen_dir}/${package_name}/{api,docs,test} > /dev/null
    rm -rf ${py_gen_dir}/.openapi* ${py_gen_dir}/*.md ${py_gen_dir}/${package_name}/{docs,test} > /dev/null

    # Use relative imports
    find ${py_gen_dir}/${package_name}/models -name "*.py" -maxdepth 1  -exec ${sed} "s/from ${package_name}./from ../g" -i {} \;
    find ${py_gen_dir}/${package_name}/api -name "*.py" -maxdepth 1  -exec ${sed} "s/from ${package_name}./from ../g" -i {} \;
    find ${py_gen_dir}/${package_name}/ -name "*.py" -maxdepth 1  -exec ${sed} "s/from ${package_name}./from ./g" -i {} \;
    find ${py_gen_dir}/${package_name}/ -name "*.py" -maxdepth 1  -exec ${sed} "s/from ${package_name} /from . /g" -i {} \;
    find ${py_gen_dir}/${package_name}/ -name "*.py" -maxdepth 1  -exec ${sed} "s/import ${package_name}./from . import /g" -i {} \;

    # Stub config
    cp ${py_openapi_patch_dir}/configuration.py ${py_gen_dir}/${package_name}
    
    # Update api_client
    cp ${py_openapi_patch_dir}/api_client.py ${py_gen_dir}/${package_name}
    ${sed} "s/package_name/${package_name}/g" -i ${py_gen_dir}/${package_name}/api_client.py 
    
    # Stub __init__.py
    touch ${py_gen_dir}/${package_name}/__init__.py
}

function generate_python_packages
{
    generate_python_package finance
    generate_python_package serendipity_config
    touch ${py_gen_dir}/__init__.py
}

function generate_appscript_package
{
    package_name="$1"
    mkdir -p ${appscript_gen_dir}/${package_name}
    JAVA_OPTS="-Dlog.level=warn" JAVA_TOOL_OPTIONS="-Dlog.level=warn" \
    java -jar ${root_dir}/deps/lib/openapi-generator-cli-5.0.0-beta2.jar generate \
        -i ${root_dir}/schema/serendipity/${package_name}.json \
        -c ${appscript_dir}/openapi_config.json \
        -g typescript-fetch \
        -o ${appscript_gen_dir}/${package_name}

    rm -rf ${appscript_gen_dir}/${package_name}/apis

    cp ${appscript_openapi_patch_dir}/runtime.ts ${appscript_gen_dir}/${package_name}
    cp ${appscript_openapi_patch_dir}/index.ts ${appscript_gen_dir}/${package_name}
}

function generate_appscript_packages
{
    generate_appscript_package finance
    generate_appscript_package serendipity_config
}

generate_python_packages
generate_appscript_packages